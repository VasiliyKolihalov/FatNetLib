name: Publish Artifact

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 3.1
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x
      
      # For StyleCopPlus
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
          
      # Seems like a bug in csproj environment variables injection in ubuntu
      # The only way to link the UnityEngine.dll is to put exactly into FatNetLib.UnityLogging
      # Todo: Don't use https://nextcloud.ntrubkin.ru
      - name: Setup Unity
        run: |
          export Unity=$(readlink -m $(pwd)/FatNetLib.UnityLogging/Unity/2021.3.13f1)
          wget --no-verbose --directory-prefix $Unity"/Editor/Data/Managed" https://nextcloud.ntrubkin.ru/s/BbkRsbHEKB5Y2CY/download/UnityEngine.dll;

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests
        run: |
          dotnet test --no-build --verbosity normal --configuration Release FatNetLib.Core.Tests
          dotnet test --no-build --verbosity normal --configuration Release FatNetLib.Json.Tests

      - name: Run integration tests
        run: dotnet test --no-build --verbosity normal --configuration Release --filter FatNetLib.IntegrationTests

      - name: Pack
        run: |
          dotnet pack FatNetLib.Core/FatNetLib.Core.csproj --no-restore --no-build --configuration Release
          dotnet pack FatNetLib.Json/FatNetLib.Json.csproj --no-restore --no-build --configuration Release
          dotnet pack FatNetLib.MicrosoftLogging/FatNetLib.MicrosoftLogging.csproj --no-restore --no-build --configuration Release
          dotnet pack FatNetLib.UnityLogging/FatNetLib.UnityLogging.csproj --no-restore --no-build --configuration Release

      - name: Check the project versions
        uses: ./.github/actions/check-versions
        with:
          repo-username: ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_USERNAME }}
          repo-password: ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_PASSWORD }}

      - name: Push
        run: |
          NTRUBKIN_NUGET_REPO="https://nexus.ntrubkin.ru/repository/nuget-death-angel/"
          GITHUB_NUGET_REPO="https://nuget.pkg.github.com/VasiliyKolihalov/index.json"
          dotnet nuget push FatNetLib.Core/bin/Release/**.nupkg --source $NTRUBKIN_NUGET_REPO --api-key ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_NUGET_API_KEY }}
          dotnet nuget push FatNetLib.Core/bin/Release/**.nupkg --source $GITHUB_NUGET_REPO --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push FatNetLib.Json/bin/Release/**.nupkg --source $NTRUBKIN_NUGET_REPO --api-key ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_NUGET_API_KEY }}
          dotnet nuget push FatNetLib.Json/bin/Release/**.nupkg --source $GITHUB_NUGET_REPO --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push FatNetLib.MicrosoftLogging/bin/Release/**.nupkg --source $NTRUBKIN_NUGET_REPO --api-key ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_NUGET_API_KEY }}
          dotnet nuget push FatNetLib.MicrosoftLogging/bin/Release/**.nupkg --source $GITHUB_NUGET_REPO --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push FatNetLib.UnityLogging/bin/Release/**.nupkg --source $NTRUBKIN_NUGET_REPO --api-key ${{ secrets.NTRUBKIN_NEXUS_DEATH_ANGEL_NUGET_API_KEY }}
          dotnet nuget push FatNetLib.UnityLogging/bin/Release/**.nupkg --source $GITHUB_NUGET_REPO --api-key ${{ secrets.GITHUB_TOKEN }}
